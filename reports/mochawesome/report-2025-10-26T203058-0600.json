{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2025-10-27T02:30:52.847Z",
    "end": "2025-10-27T02:30:58.292Z",
    "duration": 5445,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e7809191-5b1b-415c-9a48-2da72696f62d",
      "title": "",
      "fullFile": "cypress\\e2e\\checkout.happy.cy.js",
      "file": "cypress\\e2e\\checkout.happy.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "10626615-ab5f-4c48-86a0-c07886755aea",
          "title": "Flujo completo: login → catálogo → carrito → checkout → confirmación",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "valida ítems y completa compra aprobada",
              "fullTitle": "Flujo completo: login → catálogo → carrito → checkout → confirmación valida ítems y completa compra aprobada",
              "timedOut": null,
              "duration": 5364,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// === LOGIN ===\ncy.readFile('src/data/usuarios.json').then(users => {\n  const {\n    email,\n    password\n  } = users[0];\n  cy.visit('/login');\n  cy.get('.text-sm > [href=\"/login\"]').click();\n  cy.get('body').then($body => {\n    // ¿ya está el formulario?\n    if ($body.find('[data-testid=\"input-email\"]').length === 0) {\n      // plan B: click al link de Login en el header (ancla o Link)\n      // - intenta selector por href que termina en 'login'\n      cy.get('a[href$=\"login\"]').first().click({\n        force: true\n      });\n    }\n  });\n  cy.get('[data-testid=\"input-email\"]').type(email);\n  cy.get('[data-testid=\"input-password\"]').type(password);\n  cy.get('[data-testid=\"btn-login\"]').click();\n  // Redirección a Catálogo confirmada por URL o título\n  cy.url().should('include', '/catalogo');\n  cy.contains('h1', 'Catálogo').should('be.visible');\n  // === CATÁLOGO: tomar nombre del primer ticket y agregarlo ===\n  cy.get('[data-testid^=\"card-\"]').first().within(() => {\n    cy.get('h3').should('be.visible').invoke('text').then(t => cy.wrap(t.trim()).as('ticketName'));\n    cy.get('button[data-testid^=\"btn-add-\"]').click();\n  });\n  // toast de agregado\n  cy.get('[data-testid=\"toast-added\"]').should('be.visible');\n  // === MENÚ: ir a CARRITO (sin visit) ===\n  cy.get('a[href=\"/carrito\"]').first().click();\n  // === CARRITO: validar que está el producto ===\n  cy.get('[data-testid=\"carrito-page\"]').should('be.visible');\n  cy.get('@ticketName').then(name => {\n    cy.get('[data-testid=\"carrito-lista\"]').should('contain', name);\n  });\n  // Ir a checkout por el link \"Ir a checkout\"\n  cy.contains('a', 'Ir a checkout').click();\n  // === CHECKOUT: validar resumen y completar datos ===\n  cy.get('[data-testid=\"checkout-form\"]').should('be.visible');\n  cy.get('@ticketName').then(name => {\n    cy.contains('aside', 'Resumen').should('contain', name);\n  });\n  // Comprador\n  cy.get('[data-testid=\"inp-nombre\"]').type('Luciano QA');\n  cy.get('[data-testid=\"inp-email\"]').type('luciano.qa@example.com');\n  cy.get('[data-testid=\"inp-dni\"]').type('30123456');\n  // Tarjeta (aprobada para llegar a confirmación)\n  cy.get('[data-testid=\"inp-card\"]').type('4242 4242 4242 4242');\n  cy.get('[data-testid=\"inp-exp\"]').type('12/30');\n  cy.get('[data-testid=\"inp-cvc\"]').type('123');\n  // Confirmar compra\n  cy.get('[data-testid=\"btn-pay\"]').click();\n  // === CONFIRMACIÓN: textos y nombre del ticket ===\n  cy.get('[data-testid=\"confirmacion-page\"]').should('be.visible');\n  cy.contains('¡Compra confirmada!').should('be.visible');\n  cy.contains('Tu orden fue registrada correctamente. Abajo están los detalles.').should('be.visible');\n  cy.get('@ticketName').then(name => {\n    cy.get('[data-testid=\"orden-items\"]').should('contain', name);\n  });\n});",
              "err": {},
              "uuid": "8c52561c-f8b9-4f56-9b90-91121b968a11",
              "parentUUID": "10626615-ab5f-4c48-86a0-c07886755aea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8c52561c-f8b9-4f56-9b90-91121b968a11"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5364,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report-[datetime]",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "reports/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true,
        "reportFilename": "report-[datetime]",
        "charts": true
      },
      "version": "6.2.0"
    }
  }
}